@model IEnumerable<FinalProject.Models.Reservation>
@{
    ViewData["Title"] = "Manage Reservations";
}

<div class="container">
    <h2>Manage Reservations</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <h5 class="card-title mb-0">Create New Reservation</h5>
        </div>
        <div class="card-body">
            <form asp-action="CreateReservation" method="post">
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" list="customerList" id="customerInput" class="form-control" required
                                   onchange="updateCustomerSelect(this.value)" />
                            <datalist id="customerList">
                                @foreach (var item in ViewBag.Customers)
                                {
                                    <option value="@item.Text" data-id="@item.Value"></option>
                                }
                            </datalist>
                            <input type="hidden" name="CustomerID" id="customerIDInput" required />
                            <label>Customer</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" list="propertyList" id="propertyInput" class="form-control" required
                                   onchange="updatePropertySelect(this.value)" />
                            <datalist id="propertyList">
                                @foreach (var property in ViewBag.Properties)
                                {
                                    <option value="@property.Text" data-id="@property.Value" data-guests="@property.GuestLimit"></option>
                                }
                            </datalist>
                            <input type="hidden" name="PropertyID" id="propertyIDInput" required />
                            <label>Property</label>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3">
                        <div class="form-floating mb-3">
                            <input type="date" id="checkInDate" name="CheckIn" class="form-control"
                                   required min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                            <label>Check-in Date</label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating mb-3">
                            <input type="date" id="checkOutDate" name="CheckOut" class="form-control" required />
                            <label>Check-out Date</label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating mb-3">
                            <input type="number" id="guestInput" name="NumOfGuests" class="form-control"
                                   required min="1" />
                            <label>Number of Guests</label>
                            <div id="guestLimitHelp" class="form-text text-muted"></div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary mt-2">Create Reservation</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="card-title mb-0">All Reservations</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Confirmation #</th>
                            <th>Customer</th>
                            <th>Property</th>
                            <th>Check In</th>
                            <th>Check Out</th>
                            <th>Maximum Guests</th>
                            <th>Current Guests</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var reservation in Model.OrderByDescending(r => r.CheckIn))
                        {
                            <tr>
                                <td>@reservation.ConfirmationNumber</td>
                                <td>@reservation.Customer.Email</td>
                                <td>@reservation.Property.Street, @reservation.Property.City, @reservation.Property.State @reservation.Property.Zip</td>
                                <td>@reservation.CheckIn.ToShortDateString()</td>
                                <td>@reservation.CheckOut.ToShortDateString()</td>
                                <td>@reservation.Property.GuestsAllowed</td>
                                <td>@reservation.NumOfGuests</td>
                                <td>
                                    @if (reservation.ReservationStatus)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Cancelled</span>
                                    }
                                </td>
                                <td>
                                    @if (reservation.ReservationStatus && reservation.CheckIn > DateTime.Now.AddDays(1))
                                    {
                                        <form asp-action="CancelReservation" method="post" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@reservation.ReservationID" />
                                            <button type="submit" class="btn btn-danger btn-sm"
                                                    onclick="return confirm('Are you sure you want to cancel this reservation?')">
                                                Cancel
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateCustomerSelect(selectedText) {
            const options = document.querySelector('#customerList').options;
            for (let option of options) {
                if (option.value === selectedText) {
                    document.querySelector('#customerIDInput').value = option.dataset.id;
                    break;
                }
            }
        }

        function updatePropertySelect(selectedText) {
            const options = document.querySelector('#propertyList').options;
            for (let option of options) {
                if (option.value === selectedText) {
                    document.querySelector('#propertyIDInput').value = option.dataset.id;
                    const guestLimit = option.dataset.guests;
                    document.querySelector('#guestInput').max = guestLimit;
                    document.querySelector('#guestLimitHelp').textContent = `Maximum ${guestLimit} guests allowed`;
                    break;
                }
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const checkInDate = document.getElementById('checkInDate');
            const checkOutDate = document.getElementById('checkOutDate');
            const guestInput = document.getElementById('guestInput');

            checkInDate.addEventListener('change', function () {
                checkOutDate.min = this.value;
                if (checkOutDate.value && checkOutDate.value < this.value) {
                    checkOutDate.value = this.value;
                }
            });

            // Auto-dismiss alerts after 5 seconds
            setTimeout(function () {
                document.querySelectorAll('.alert').forEach(alert => alert.remove());
            }, 5000);
        });
    </script>
}