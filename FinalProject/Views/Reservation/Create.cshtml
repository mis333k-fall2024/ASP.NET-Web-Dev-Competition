@* Views/Reservation/Create.cshtml *@
@model Reservation

@{
    ViewData["Title"] = "Create Reservation";
}

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h2>Book Your Stay</h2>
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">@Model.Property.PropertyName</h5>
                    <p class="card-text">
                        <i class="bi bi-geo-alt"></i> @Model.Property.City, @Model.Property.State<br />
                        <i class="bi bi-people"></i> Up to @Model.Property.GuestsAllowed guests
                    </p>
                </div>
            </div>

            <form asp-action="Create" class="row g-3">
                <input type="hidden" name="PropertyID" value="@Model.Property.PropertyID" />
                <div asp-validation-summary="All" class="text-danger"></div>

                <div class="col-md-6">
                    <label class="form-label">Check-in Date</label>
                    <input type="date" name="CheckIn" id="checkInDate"
                           value="@Context.Request.Query["checkInDate"]" class="form-control" required
                           min="@DateTime.Now.ToString("yyyy-MM-dd")" onchange="updateCheckOutMinDate()" />
                </div>

                <div class="col-md-6">
                    <label class="form-label">Check-out Date</label>
                    <input type="date" name="CheckOut" id="checkOutDate"
                           value="@Context.Request.Query["checkOutDate"]" class="form-control" required />
                    <span asp-validation-for="CheckIn" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label class="form-label">Number of Guests</label>
                    <input type="number" name="NumOfGuests" id="numOfGuests"
                           value="@Context.Request.Query["numOfGuests"]" class="form-control" required
                           min="1" max="@Model.Property.GuestsAllowed" />
                    <span asp-validation-for="CheckOut" class="text-danger"></span>
                </div>

                <input type="hidden" name="Customer" value="@ViewBag.Customer" />
                <input type="hidden" name="PropertyID" value="@ViewBag.Customer" />
                <input type="hidden" name="CustomerID" value="@ViewBag.Customer" />


                <div class="col-12">
                    <button type="submit" class="btn btn-primary">Add to Cart</button>
                    <a asp-controller="Property" asp-action="Details" asp-route-id="@Model.PropertyID"
                       class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>

        <!-- Display price details -->
        <div class="col-md-4">
            <div class="card sticky-top" style="top: 20px;">
                <div class="card-body">
                    <h4 class="card-title">Pricing Summary</h4>
                    <ul class="list-unstyled">
                        <li>
                             Cost Per Night: <span id="costPerNightDisplay"></span>
                        </li>
                        <li>
                            Number of Nights: <span id="numNightsDisplay"></span>
                        </li>
                        <li>
                            Cleaning Fee: <span id="cleaningFeeDisplay"></span>
                        </li>
                        <li>
                            Tax: <span id="taxDisplay"></span>
                        </li>
                        <li>
                            Total Amount: <span id="totalAmountDisplay"></span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        weekdayPrice = @Model.Property.WeekdayPrice; // Assuming weekday price is in the model
        weekendPrice = @Model.Property.WeekendPrice; // Assuming weekend price is in the model
        cleaningFee = @Model.Property.CleaningFee; // Adjust as needed
        const taxRate = 0.07; // Tax rate (e.g., 10%)

        document.getElementById('checkInDate').addEventListener('change', updatePriceDetails);
        document.getElementById('checkOutDate').addEventListener('change', updatePriceDetails);

        function updateCheckOutMinDate() {
            var checkInDate = document.getElementById('checkInDate').value;
            var checkOutDateInput = document.getElementById('checkOutDate');
            if (checkInDate) {
                checkOutDateInput.min = checkInDate;
            }
        }

        // Call the function on page load to ensure correct min value is set if check-in date is already populated.
        document.addEventListener('DOMContentLoaded', function () {
            updateCheckOutMinDate();
        });

        function updatePriceDetails() {
            const checkInDate = new Date(document.getElementById('checkInDate').value);
            const checkOutDate = new Date(document.getElementById('checkOutDate').value);

            if (checkInDate && checkOutDate && checkOutDate > checkInDate) {
                let numNights = Math.floor((checkOutDate - checkInDate) / (1000 * 60 * 60 * 24));
                let totalPrice = 0;

                for (let i = 0; i < numNights; i++) {
                    let currentDate = new Date(checkInDate);
                    currentDate.setDate(checkInDate.getDate() + i);
                    if (currentDate.getDay() === 4 || currentDate.getDay() === 5 || currentDate.getDay() === 6) { // Sunday (0) or Saturday (6)
                        totalPrice += weekendPrice;
                    } else {
                        totalPrice += weekdayPrice;
                    }
                }

                const tax = totalPrice * taxRate;
                const totalAmount = totalPrice + tax + cleaningFee;

                // Display values
                document.getElementById('costPerNightDisplay').textContent = `$${(totalPrice / numNights).toFixed(2)}`;
                document.getElementById('numNightsDisplay').textContent = numNights;
                document.getElementById('cleaningFeeDisplay').textContent = `$${cleaningFee.toFixed(2)}`;
                document.getElementById('taxDisplay').textContent = `$${tax.toFixed(2)}`;
                document.getElementById('totalAmountDisplay').textContent = `$${totalAmount.toFixed(2)}`;
            } else {
                // Reset displayed values if dates are not valid
                document.getElementById('costPerNightDisplay').textContent = '';
                document.getElementById('numNightsDisplay').textContent = '';
                document.getElementById('cleaningFeeDisplay').textContent = '';
                document.getElementById('taxDisplay').textContent = '';
                document.getElementById('totalAmountDisplay').textContent = '';
            }
        }


                const reservedDates = @Html.Raw(Json.Serialize(ViewBag.ReservedDates));

                document.getElementById('checkInDate').addEventListener('change', validateReservationDates);
                document.getElementById('checkOutDate').addEventListener('change', validateReservationDates);

                function validateReservationDates() {
                    const checkInDate = new Date(document.getElementById('checkInDate').value);
                    const checkOutDate = new Date(document.getElementById('checkOutDate').value);

                    if (checkInDate && checkOutDate && checkOutDate > checkInDate) {
                        const isOverlapping = reservedDates.some(reserved => {
                            const reservedStart = new Date(reserved.start);
                            const reservedEnd = new Date(reserved.end);
                            return checkInDate < reservedEnd && checkOutDate > reservedStart;
                        });

                        if (isOverlapping) {
                            alert("The selected dates overlap with a reservation you already made. Please choose different dates.");
                            document.getElementById('checkInDate').value = '';
                            document.getElementById('checkOutDate').value = '';
                        }
                    }
                }
    </script>
}



