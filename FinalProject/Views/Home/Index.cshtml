@model IEnumerable<Property>

@{
    ViewData["Title"] = "BevoBnB - Book Unique Places to Stay";
}

<div class="container-fluid p-0">
    <!-- Sticky Search Header -->
    <div class="sticky-top bg-white shadow-sm py-3">
        <div class="container">
            <form asp-controller="Property" asp-action="Search" method="get">
                <div class="row g-3">
                    <div class="col-md-3">
                        <div class="form-floating">
                            <input type="text" name="location" class="form-control rounded-pill" id="location" placeholder="Where to?" />
                            <label for="location">Where to?</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="date" name="checkIn" class="form-control rounded-pill" id="checkIn" />
                            <label for="checkIn">Check-in</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="date" name="checkOut" class="form-control rounded-pill" id="checkOut" />
                            <label for="checkOut">Check-out</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="number" name="guests" class="form-control rounded-pill" id="guests" placeholder="Guests" min="1" />
                            <label for="guests">Guests</label>
                        </div>
                    </div>
                    <div class="col-md-3 d-flex gap-2">
                        <button type="submit" class="btn btn-primary flex-grow-1 rounded-pill d-flex align-items-center justify-content-center gap-2">
                            <i class="bi bi-search" style="font-size: 0.9rem;"></i>
                            <span>Search</span>
                        </button>
                        <button type="button" class="btn btn-outline-secondary rounded-pill d-flex align-items-center justify-content-center" style="width: 42px;" title="Advanced Search">
                            <i class="bi bi-sliders" style="font-size: 1rem;"></i>
                        </button>
                    </div>
                </div>
            </form>

            <!-- Category Tabs -->
            <div class="mt-4 border-bottom">
                <div class="d-flex gap-4 overflow-auto pb-2 scrollbar-hide">
                    <a asp-controller="Property"
                       asp-action="Search"
                       class="text-decoration-none">
                        <div class="text-center category-tab">
                            <div class="mb-2">
                                <i class="bi bi-house-door h4"></i>
                            </div>
                            <div class="small">All</div>
                        </div>
                    </a>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <a asp-controller="Property"
                           asp-action="Search"
                           asp-route-categoryId="@category.CategoryID"
                           class="text-decoration-none">
                            <div class="text-center category-tab">
                                <div class="mb-2">
                                    <i class="bi bi-house-door h4"></i>
                                </div>
                                <div class="small">@category.CategoryName</div>
                            </div>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Property Grid -->
    <div class="container py-4">
        <div class="mb-3">
            <span class="text-muted">Showing @Model.Count(p => p.PropertyStatus) of @Model.Count() Properties</span>
        </div>

        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
            @foreach (var property in Model.Where(p => p.PropertyStatus))
            {
                <div class="col">
                    <div class="card h-100 border-0 shadow-sm property-card">
                        <img src="@property.ImageURL" class="card-img-top" alt="@property.PropertyName" />
                            <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h5 class="card-title mb-0">@property.Street</h5>
                                @{
                                    var validReviews = property.Reviews?.Where(r => !r.DisputeStatus);
                                    if (validReviews?.Any() == true)
                                    {
                                        var avgRating = validReviews.Average(r => r.Rating);
                                        <div class="text-end">
                                            <i class="bi bi-star-fill text-warning"></i>
                                            <span>@avgRating.ToString("F1")</span>
                                        </div>
                                    }
                                }
                            </div>
                            <p class="card-text text-muted mb-2">
                                @property.City, @property.State
                            </p>
                            <p class="card-text">
                                <i class="bi bi-people"></i> @property.GuestsAllowed guests
                                <br />
                                <i class="bi bi-door-closed"></i> @property.Bedrooms @(property.Bedrooms == 1 ? "bedroom" : "bedrooms")
                                <br />
                                <i class="bi bi-water"></i> @property.Bathrooms @(property.Bathrooms == 1 ? "bathroom" : "bathrooms")
                            </p>
                            <p class="card-text mt-2">
                                <span class="fw-bold">@property.WeekdayPrice.ToString("C")</span> / night
                                @if (property.DiscountRate > 0)
                                {
                                    <br />
                                    <small class="text-success">
                                        @(property.DiscountRate)% off for @property.MinNightsForDiscount+ nights
                                    </small>
                                }
                            </p>
                        </div>
                        <div class="card-footer bg-transparent border-0">
                            <a asp-controller="Property"
                               asp-action="Details"
                               asp-route-id="@property.PropertyID"
                               class="btn btn-outline-primary w-100 rounded-pill">
                                View Details
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Any(p => p.PropertyStatus))
        {
            <div class="text-center my-5">
                <i class="bi bi-house-x display-1 text-muted"></i>
                <h3 class="mt-3">No properties found</h3>
                <p class="text-muted">Try adjusting your search criteria</p>
            </div>
        }
    </div>
</div>

<style>
    .scrollbar-hide::-webkit-scrollbar {
        display: none;
    }

    .scrollbar-hide {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }

    .category-tab {
        opacity: 0.7;
        transition: opacity 0.2s;
        padding: 8px 16px;
        border-bottom: 2px solid transparent;
    }

        .category-tab:hover {
            opacity: 1;
            border-bottom: 2px solid #0d6efd;
        }

    .property-card {
        transition: transform 0.2s;
    }

        .property-card:hover {
            transform: translateY(-5px);
        }
</style>

@section Scripts {
    <script>
        // Set minimum date for check-in to today
        const checkInInput = document.getElementById('checkIn');
        const checkOutInput = document.getElementById('checkOut');
        const today = new Date().toISOString().split('T')[0];

        checkInInput.min = today;

        // Update check-out minimum date when check-in is selected
        checkInInput.addEventListener('change', function () {
            checkOutInput.min = this.value;
            if (checkOutInput.value && checkOutInput.value < this.value) {
                checkOutInput.value = this.value;
            }
        });
    </script>
}