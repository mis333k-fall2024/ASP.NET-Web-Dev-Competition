@model IEnumerable<Property>

@{
    ViewData["Title"] = "Search Properties";
}

<style>
    .search-filters {
        transition: all 0.3s ease-in-out;
    }
</style>

<div class="container">
    <!-- Search Form -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h2 class="h4 mb-3">Search Properties</h2>
            <form asp-action="Search" method="get" id="searchForm">
                <div class="row g-3">
                    <!-- Basic Search Fields -->
                    <div class="col-md-3">
                        <div class="form-floating">
                            <input type="text" name="location" class="form-control" id="location" 
                                   placeholder="Where to?" value="@Context.Request.Query["location"]" />
                            <label for="location">Location</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="date" name="checkIn" class="form-control" id="checkIn"
                                   value="@Context.Request.Query["checkIn"]" />
                            <label for="checkIn">Check-in</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="date" name="checkOut" class="form-control" id="checkOut"
                                   value="@Context.Request.Query["checkOut"]" />
                            <label for="checkOut">Check-out</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="number" name="guests" class="form-control" id="guests"
                                   placeholder="Guests" min="1" value="@Context.Request.Query["guests"]" />
                            <label for="guests">Guests</label>
                        </div>
                    </div>
                    <div class="col-md-3 d-flex gap-2">
                        <button type="submit" class="btn btn-primary flex-grow-1">
                            <i class="bi bi-search"></i> Search
                        </button>
                        <button type="button" class="btn btn-outline-secondary" id="toggleFilters">
                            <i class="bi bi-sliders"></i> Filters
                        </button>
                    </div>

                    <!-- Category Selection -->
                    <div class="col-12">
                        <div class="d-flex gap-2 flex-wrap">
                            <a asp-action="Search" class="btn btn-outline-secondary @(string.IsNullOrEmpty(Context.Request.Query["categoryId"]) ? "active" : "")">
                                All Types
                            </a>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <a asp-action="Search" asp-route-categoryId="@category.CategoryID"
                                   asp-route-location="@Context.Request.Query["location"]"
                                   asp-route-checkIn="@Context.Request.Query["checkIn"]"
                                   asp-route-checkOut="@Context.Request.Query["checkOut"]"
                                   asp-route-guests="@Context.Request.Query["guests"]"
                                   class="btn btn-outline-secondary @(Context.Request.Query["categoryId"] == category.CategoryID.ToString() ? "active" : "")">
                                    @category.CategoryName
                                </a>
                            }
                        </div>
                    </div>

                    <!-- Advanced Search Fields -->
                    <div class="col-12">
                        <div class="search-filters" id="advancedSearch" style="display: none;">
                            <div class="card mt-3">
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <label class="form-label">Price Range (per night)</label>
                                            <div class="input-group">
                                                <input type="number" name="minPrice" class="form-control" 
                                                       placeholder="Min" min="0" value="@Context.Request.Query["minPrice"]" />
                                                <input type="number" name="maxPrice" class="form-control" 
                                                       placeholder="Max" min="0" value="@Context.Request.Query["maxPrice"]" />
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <label class="form-label">Minimum Bedrooms</label>
                                            <input type="number" name="minBedrooms" class="form-control" min="1"
                                                   value="@Context.Request.Query["minBedrooms"]" />
                                        </div>

                                        <div class="col-md-3">
                                            <label class="form-label">Minimum Bathrooms</label>
                                            <input type="number" name="minBathrooms" class="form-control" min="1"
                                                   value="@Context.Request.Query["minBathrooms"]" />
                                        </div>

                                        <div class="col-md-3">
                                            <label class="form-label">Minimum Rating</label>
                                            <input type="number" name="minRating" class="form-control" 
                                                   min="1" max="5" step="0.1" value="@Context.Request.Query["minRating"]" />
                                        </div>

                                        <div class="col-md-3">
                                            <label class="form-label">Amenities</label>
                                            <div class="form-check">
                                                <input type="checkbox" name="petsAllowed" class="form-check-input" value="true"
                                                       @(Context.Request.Query["petsAllowed"] == "true" ? "checked" : "") />
                                                <label class="form-check-label">Pets Allowed</label>
                                            </div>
                                            <div class="form-check">
                                                <input type="checkbox" name="freeParking" class="form-check-input" value="true"
                                                       @(Context.Request.Query["freeParking"] == "true" ? "checked" : "") />
                                                <label class="form-check-label">Free Parking</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                                    <button type="button" class="btn btn-secondary" onclick="clearFilters()">Clear Filters</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Search Results -->
    <div class="mb-3">
        <h3>Search Results</h3>
        <p class="text-muted">Showing @ViewBag.FilteredCount of @ViewBag.TotalCount Properties</p>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
        @foreach (var property in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <img src="@property.ImageURL" class="card-img-top" Height="32%" alt="@property.PropertyName" />
                    <div class="card-body">
                        <h5 class="card-title">@property.PropertyName</h5>
                        <p class="card-text">
                            <i class="bi bi-geo-alt"></i> @property.City, @property.State
                            <br />
                            <span class="badge bg-secondary">@property.Category.CategoryName</span>
                            @{
                                var validReviews = property.Reviews?.Where(r => r.DisputeStatus != DisputeStatus.ValidDispute);
                                if (validReviews?.Any() == true)
                                {
                                    var avgRating = validReviews.Average(r => r.Rating);
                                    <span class="ms-2">
                                        <i class="bi bi-star-fill text-warning"></i>
                                        @avgRating.ToString("F1")
                                    </span>
                                }
                            }
                        </p>
                        <ul class="list-unstyled mb-0">
                            <li><i class="bi bi-people"></i> Up to @property.GuestsAllowed guests</li>
                            <li><i class="bi bi-door-closed"></i> @property.Bedrooms @(property.Bedrooms == 1 ? "bedroom" : "bedrooms")</li>
                            <li><i class="bi bi-water"></i> @property.Bathrooms @(property.Bathrooms == 1 ? "bathroom" : "bathrooms")</li>
                            <li class="mt-2">
                                <strong>@property.WeekdayPrice.ToString("C")</strong> /night
                                @if (property.DiscountRate > 0)
                                {
                                    <small class="text-success d-block">
                                        @property.DiscountRate.Value.ToString("P0") off for @property.MinNightsForDiscount+ nights
                                    </small>
                                }
                            </li>
                        </ul>
                    </div>
                    <div class="card-footer bg-transparent">
                        <a asp-action="Details" asp-route-id="@property.PropertyID"
                           class="btn btn-outline-primary w-100">View Details</a>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="text-center my-5">
            <i class="bi bi-house-x display-1 text-muted"></i>
            <h3 class="mt-3">No properties found</h3>
            <p class="text-muted">Try adjusting your search criteria</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Set minimum date for check-in to today
        const checkInInput = document.getElementById('checkIn');
        const checkOutInput = document.getElementById('checkOut');
        const today = new Date().toISOString().split('T')[0];
        
        checkInInput.min = today;
        
        // Update check-out minimum date when check-in is selected
        checkInInput.addEventListener('change', function() {
            checkOutInput.min = this.value;
            if (checkOutInput.value && checkOutInput.value < this.value) {
                checkOutInput.value = this.value;
            }
        });

        // Advanced search toggle functionality
        const toggleFilters = document.getElementById('toggleFilters');
        const advancedSearch = document.getElementById('advancedSearch');
        let filtersVisible = false;

        toggleFilters.addEventListener('click', function() {
            filtersVisible = !filtersVisible;
            advancedSearch.style.display = filtersVisible ? 'block' : 'none';
            toggleFilters.classList.toggle('active', filtersVisible);
        });

        // Check URL parameters to show/hide filters
        window.addEventListener('load', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const hasAdvancedFilters = ['minPrice', 'maxPrice', 'minBedrooms', 'minBathrooms', 
                                      'minRating', 'petsAllowed', 'freeParking']
                                     .some(param => urlParams.has(param));
            
            if (hasAdvancedFilters) {
                filtersVisible = true;
                advancedSearch.style.display = 'block';
                toggleFilters.classList.add('active');
            }
        });

        // Clear filters function
        function clearFilters() {
            const form = document.getElementById('searchForm');
            const inputs = form.querySelectorAll('input:not([type="submit"])');
            inputs.forEach(input => {
                if (input.type === 'checkbox') {
                    input.checked = false;
                } else if (input.type !== 'button') {
                    input.value = '';
                }
            });
            form.submit();
        }

        // Prevent form submission if check-out date is before check-in date
        document.getElementById('searchForm').addEventListener('submit', function(event) {
            const checkIn = new Date(checkInInput.value);
            const checkOut = new Date(checkOutInput.value);
            
            if (checkOut < checkIn) {
                event.preventDefault();
                alert('Check-out date must be after check-in date');
                checkOutInput.value = checkInInput.value;
            }
        });
    </script>
}